{
	"name": "pester-test",
	"displayName": "Pester Tests",
	"description": "Enables you to run PowerShell Pester tests using the VSCode testing feature",
	"version": "0.0.0-source",
	"publisher": "pspester",
	"license": "MIT",
	"preview": true,
	"repository": "https://github.com/pester/vscode-adapter",
	"engines": {
		"vscode": "^1.77.0"
	},
	"packageManager": "pnpm@8.3.1",
	"contributes": {
		"configuration": {
			"title": "Pester",
			"properties": {
				"pester.testFilePath": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [
						"**/*.[tT]ests.[pP][sS]1"
					],
					"markdownDescription": "Specify an array of [Glob Patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) of Pester test files for the adapter to scan, relative to your workspace. This is useful if you want to limit what test files or scanned, or you want to use a different test format than `.tests.ps1`. You must specify files, so if you want to include an entire folder, add a wildcard, for instance `Tests\\*.Tests.ps1`. **This is case sensitive!** Here is a case insensitive example: `[tT]ests\\*.[tT]ests.[pP][sS]1`"
				},
				"pester.hideSkippedBecauseMessages": {
					"type": "boolean",
					"markdownDescription": "If a skipped test is inconclusive or `Set-ItResult` had the `-Because` parameter specified, those are surfaced as test errors for easy viewing. Enable this setting if you prefer these to be displayed simply as skipped. **NOTE:** If you do this then you cannot see any BECAUSE messages without looking directly at the Pester output."
				},
				"pester.autoDebugOnSave": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "When enabled, continuous run tests will be debugged when changed in the PowerShell extension."
				},
				"pester.suppressCodeLensNotice": {
					"type": "boolean",
					"markdownDescription": "It is recommended to disable the PowerShell Pester CodeLens when using this extension. Check this box to suppress this dialog. Choosing 'No' in the dialog box will also enable this at a user level"
				},
				"pester.runTestsInNewProcess": {
					"type": "boolean",
					"markdownDescription": "This will cause all Pester Test invocations to occur each time in a new process, rather than reuse a runspace. This is useful if you are testing Powershell Classes or Assemblies that cannot be unloaded or reloaded, but comes at a significant performance cost. This currently has no effect on debugging tests."
				},
				"pester.pesterModulePath": {
					"type": "string",
					"markdownDescription": "This allows to specify a custom path to the Pester module. A relative path under the current project is allowed. If this is not set then Pester module is expected to be found in one of the paths specified by `$env:PSModulePath`."
				},
				"pester.workingDirectory": {
					"type": "string",
					"markdownDescription": "Specifies the working directory of the dedicated Pester Instance. While $PSScriptRoot is recommended when using relative paths in Pester Tests, the runner will also default to the path of the current first workspace folder. Specify this if you want a different working directory."
				},
				"pester.autoRunOnSave": {
					"type": "boolean",
					"default": false,
					"deprecationMessage": "DEPRECATED: This is now handled by the VSCode native continuous run interface in the test handler.",
					"markdownDescription": "Automatically runs Pester test files upon changes being detected on save. Uncheck this box to disable this behavior."
				},
				"pester.configurationPath": {
					"type": "string",
					"markdownDescription": "Specifies the path to a custom Pester configuration in `.psd1` format. This is useful if you want to use a custom configuration file, or if you want to use a configuration file that is not named `PesterConfiguration.psd1`. If this is not set then the runner will look for a file named `PesterConfiguration.psd1` at the root of the workspace folder. This is best specified as a workspace setting and not a user setting. You may also provide a configuration via a `$PesterPrefer ence` variable in your running session, this will apply for debug runs only."
				},
				"pester.testChangeTimeout": {
					"type": "integer",
					"default": 100,
					"markdownDescription": "Specifies the timeout in milliseconds that the test adapter waits for changes to be detected before running the test. You may need to increase this value if you are on a slower computer and are getting duplicate runs after making changes or starting up the test adapter."
				}
			}
		}
	},
	"keywords": [
		"Pester",
		"PowerShell",
		"Test",
		"Debug"
	],
	"categories": [
		"Debuggers",
		"Programming Languages",
		"Other",
		"Testing"
	],
	"activationEvents": [
		"workspaceContains:**/*.[tT]ests.[pP][sS]1",
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"devDependencies": {
		"@types/chai": "^5.0.0",
		"@types/debounce-promise": "^3.1.9",
		"@types/glob": "^8.1.0",
		"@types/json-parse-safe": "^2.0.3",
		"@types/mocha": "^10.0.9",
		"@types/node": "^22.8.1",
		"@types/readline-transform": "^1.0.4",
		"@types/vscode": "^1.94.0",
		"@typescript-eslint/eslint-plugin": "^6.16.0",
		"@typescript-eslint/parser": "^6.16.0",
		"@vscode/dts": "^0.4.1",
		"@vscode/test-cli": "^0.0.4",
		"@vscode/test-electron": "^2.4.1",
		"@vscode/vsce": "^2.22.0",
		"chai": "^5.1.2",
		"debounce-promise": "^3.1.2",
		"esbuild": "^0.24.0",
		"esbuild-register": "^3.6.0",
		"eslint": "^8.56.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-config-standard-with-typescript": "^43.0.1",
		"eslint-plugin-import": "^2.31.0",
		"eslint-plugin-n": "^16.6.0",
		"eslint-plugin-promise": "^6.1.1",
		"glob": "^10.3.3",
		"json-parse-safe": "^2.0.0",
		"lookpath": "^1.2.2",
		"mocha": "^10.7.3",
		"path": "^0.12.7",
		"prettier": "^3.3.3",
		"prettier-eslint": "^16.3.0",
		"readline-transform": "^1.0.0",
		"sinon": "^19.0.2",
		"tslog": "^4.9.3",
		"typescript": "^5.6.3",
		"utility-types": "^3.11.0"
	},
	"extensionDependencies": [
		"ms-vscode.powershell"
	],
	"icon": "images/pesterlogo.png",
	"badges": [
		{
			"url": "https://img.shields.io/github/stars/pester/vscode-adapter?style=social",
			"description": "Stars",
			"href": "https://github.com/pester/vscode-adapter"
		},
		{
			"url": "https://img.shields.io/github/workflow/status/pester/vscode-adapter/%F0%9F%91%B7%E2%80%8D%E2%99%82%EF%B8%8F%20Build%20Visual%20Studio%20Code%20Extension",
			"description": "Build",
			"href": "https://github.com/pester/vscode-adapter/actions/workflows/ci.yml"
		}
	],
	"scripts": {
		"esbuild-base": "pnpm esbuild --minify --bundle --platform=node --target=node18.15 --format=cjs --sourcemap --sources-content=false --external:mocha --external:vscode",
		"package": "vsce package --no-update-package-json --no-git-tag-version --no-dependencies",
		"publish": "pnpm run publishStable --pre-release --no-git-tag-version",
		"publishStable": "vsce publish --no-update-package-json --no-dependencies",
		"build": "pnpm run esbuild-base src/extension.ts --outdir=dist",
		"build-watch": "pnpm run build --watch",
		"build-test-vscode": "pnpm run esbuild-base src/**/*.vscode.test.ts test/**/*.vscode.test.ts --outdir=dist/test",
		"build-test-vscode-watch": "pnpm run build-test-vscode --watch",
		"test-mocha": "mocha",
		"test-mocha-vscode": "pnpm vscode-test",
		"test": "pnpm test-mocha && pnpm test-mocha-vscode",
		"test-watch": "pnpm test-mocha --watch",
		"lint-eslint": "eslint . --ext .ts",
		"lint-prettier": "prettier --check .",
		"lint-tsc": "tsc --noemit",
		"lint": "pnpm lint-eslint || pnpm lint-prettier || pnpm lint-tsc",
		"download-api": "vscode-dts main",
		"postdownload-api": "vscode-dts main",
		"vscode:prepublish": "pnpm run build"
	},
	"dependencies": {
		"@ctiterm/strip-ansi": "^1.0.0"
	},
	"pnpm": {
		"patchedDependencies": {
			"@vscode/test-cli@0.0.4": "patches/@vscode__test-cli@0.0.4.patch"
		}
	}
}
