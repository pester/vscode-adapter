# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

name: 👷‍♂️ Build Visual Studio Code Extension

jobs:
  build:
    name: 👷‍♂️ Build
    defaults:
      run:
        shell: pwsh
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    runs-on: ubuntu-20.04
    steps:
      - name: 🚚 Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 📥 Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .vscode-test
          key: ${{ runner.os }}-node-${{ hashFiles('pnpm-lock.yaml') }}

      - name: ➕ Dependencies
        uses: pnpm/action-setup@v2.3.0
        with:
          run_install: true

      - name: 🔍 Get Calendar Version
        id: version
        run: |
          git config --global --add safe.directory $PWD
          dir env:
          [string]$version = & .github\Get-CalendarVersion.ps1 -MergeBuild
          "Calculated Version: $version"
          "version=$version" >> $ENV:GITHUB_OUTPUT
          "calendarVersion=$version" >> $ENV:GITHUB_OUTPUT
          "semanticVersion=$version" >> $ENV:GITHUB_OUTPUT

      - name: 👷‍♂️ Build and Package
        run: |
          pnpm package ${{steps.version.outputs.version}}

      - name: ⬆ Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Pester Tests VSCode Extension
          path: '*.vsix'

      - name: 📝 Draft Github Release
        if: github.ref == 'refs/heads/main' || github.head_ref == 'ci'
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: '${{steps.version.outputs.version}}'
          prerelease: true
          tag: 'v${{steps.version.outputs.version}}'

